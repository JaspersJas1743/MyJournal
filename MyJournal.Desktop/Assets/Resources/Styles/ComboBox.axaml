<Styles xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=mscorlib"
		xmlns:controls="clr-namespace:MyJournal.Desktop.Assets.Controls">
	<Style Selector="ComboBox">
		<Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource StrokeColor}"/>
		<Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="CornerRadius" Value="30"/>
		<Setter Property="BorderThickness" Value="5"/>
		<Setter Property="FontFamily" Value="{StaticResource Raleway}"/>
		<Setter Property="FontFeatures" Value="+lnum"/>
		<Setter Property="FontSize" Value="24"/>
		<Setter Property="Padding" Value="20 0 0 0"/>
		<Setter Property="FontWeight" Value="SemiBold"/>
		<Setter Property="FocusAdorner" Value="{x:Null}" />
		<Setter Property="Transitions">
			<Transitions>
				<BrushTransition Property="Background" Duration="0:0:0.2"/>
			</Transitions>
		</Setter>
		<Setter Property="Template">
	        <ControlTemplate>
	            <Grid ColumnDefinitions="*,40">
	                <Border x:Name="Background"
	                        Grid.Column="0"
	                        Grid.ColumnSpan="2"
							Classes="TransitionBorderBrush TransitionBackground"
	                        Background="{TemplateBinding Background}"
	                        BorderBrush="{TemplateBinding BorderBrush}"
	                        BorderThickness="{TemplateBinding BorderThickness}"
	                        CornerRadius="{TemplateBinding CornerRadius}"
	                        MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />
	                <Border x:Name="HighlightBackground"
	                        Grid.Column="0"
	                        Grid.ColumnSpan="2"
	                        Background="Transparent"
	                        BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}"
	                        BorderThickness="{TemplateBinding BorderThickness}"
	                        CornerRadius="{TemplateBinding CornerRadius}"
	                        IsVisible="False"/>
	                <TextBlock x:Name="PlaceholderTextBlock"
	                           Grid.Column="0"
	                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
	                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
	                           Margin="{TemplateBinding Padding}" FontSize="{TemplateBinding FontSize}"
	                           Text="{TemplateBinding PlaceholderText}"
	                           Foreground="{TemplateBinding PlaceholderForeground}"
	                           IsVisible="{TemplateBinding SelectedItem,Converter={x:Static ObjectConverters.IsNull}}" />
	                <ContentControl x:Name="ContentPresenter" Grid.Column="0" Margin="20 0"
	                                Content="{TemplateBinding SelectionBoxItem}" FontSize="{TemplateBinding FontSize}"
	                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
	                                ContentTemplate="{TemplateBinding ItemTemplate}"
	                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
	                </ContentControl>
	                <Border x:Name="DropDownOverlay"
	                        Grid.Column="1"
	                        Background="Transparent"
	                        Margin="0,1,1,1"
	                        Width="30"
	                        IsVisible="False"
	                        HorizontalAlignment="Right" />
					<controls:XamlSvg	x:Name="DropDownGlyph" Grid.Column="1" UseLayoutRounding="False" IsHitTestVisible="False" Height="15"
										Width="15" Margin="0,0,10,0" HorizontalAlignment="Left" VerticalAlignment="Center"
										Foreground="{TemplateBinding Foreground}" Classes="DownArrow RenderTransformTransitions"
										Classes.UpArrow="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=IsDropDownOpen}"
										/>
	                <Popup  Grid.Column="0" Name="PART_Popup"
	                        WindowManagerAddShadowHint="False"
	                        IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
	                        MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
	                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
	                        PlacementTarget="Background"
	                        IsLightDismissEnabled="True"
	                        InheritsTransform="True">
	                    <Border x:Name="PopupBorder" ClipToBounds="True" Padding="-5"
								Classes="TransitionBorderBrush OpacityTransition TransitionBackground"
	                            Background="{DynamicResource ComboBoxDropDownBackground}"
	                            BorderBrush="{TemplateBinding BorderBrush}"
	                            BorderThickness="{TemplateBinding BorderThickness}"
	                            HorizontalAlignment="Stretch" CornerRadius="30"
								Opacity="{TemplateBinding IsDropDownOpen,Converter={StaticResource BoolToDoubleConverter}}">
							<ScrollViewer	HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
											VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
											IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}">
	                            <ItemsPresenter Name="PART_ItemsPresenter" ClipToBounds="True"
	                                            ItemsPanel="{TemplateBinding ItemsPanel}" />
	                        </ScrollViewer>
	                    </Border>
	                </Popup>
	            </Grid>
	        </ControlTemplate>
	    </Setter>
		<Style Selector="^:pointerover /template/ Border#Background">
			<Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource StrokeColor}"/>
		</Style>
		<Style Selector="^.HaveError">
			<Setter Property="BorderBrush" Value="{DynamicResource ErrorColor}"/>
			<Style Selector="^ /template/ controls|XamlSvg#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource ErrorColor}"/>
			</Style>
			<Style Selector="^:pointerover /template/ Border#Background">
				<Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
				<Setter Property="BorderBrush" Value="{DynamicResource ErrorColor}"/>
			</Style>
		</Style>
		<Style Selector="^:focus-visible">
			<Style Selector="^ /template/ Border#HighlightBackground">
				<Setter Property="BorderBrush" Value="{DynamicResource StrokeColor}"/>
			</Style>
		</Style>
		<Style Selector="^.EmailDomainSelection">
			<Setter Property="CornerRadius" Value="0 30 30 0"/>
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="^.ClassAndSubjectSelection">
			<Setter Property="FontSize" Value="20"/>
			<Style Selector="^ /template/ Popup > Border#PopupBorder">
				<Setter Property="CornerRadius" Value="10"/>
				<Setter Property="Background" Value="{TemplateBinding Background}"/>
				<Setter Property="BorderBrush" Value="Transparent"/>
				<Setter Property="BorderThickness" Value="0"/>
			</Style>
			<Style Selector="^ /template/ ContentControl#ContentPresenter">
				<Setter Property="Margin" Value="20 0 0 5"/>
			</Style>
			<Style Selector="^ ComboBoxItem">
				<Setter Property="HorizontalContentAlignment" Value="Left"/>
				<Setter Property="VerticalContentAlignment" Value="Center"/>
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="FontSize" Value="20"/>
				<Setter Property="Template">
					<ControlTemplate>
						<Grid Background="{TemplateBinding Background}">
							<ContentPresenter Name="PART_ContentPresenter" Margin="10 0 0 0"
											Background="{TemplateBinding Background}"
											Foreground="{TemplateBinding Foreground}"
											CornerRadius="{TemplateBinding CornerRadius}"
											ContentTemplate="{TemplateBinding ContentTemplate}"
											Content="{TemplateBinding Content}"
											FontSize="{TemplateBinding FontSize}"
											HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											Padding="{TemplateBinding Padding}" />
						</Grid>
					</ControlTemplate>
				</Setter>
				<Style Selector="^:nth-child(1) /template/ ContentPresenter#PART_ContentPresenter">
					<Setter Property="Margin" Value="10 10 0 0 "/>
					<Setter Property="CornerRadius" Value="10 10 0 0"/>
					<Style Selector="^:pointerover">
						<Setter Property="CornerRadius" Value="10 10 0 0"/>
					</Style>
				</Style>
				<Style Selector="^:nth-last-child(1) /template/ ContentPresenter#PART_ContentPresenter">
					<Setter Property="Margin" Value="10 0 0 10 "/>
					<Setter Property="CornerRadius" Value="0 0 10 10"/>
					<Style Selector="^:pointerover">
						<Setter Property="CornerRadius" Value="0 0 10 10"/>
					</Style>
				</Style>
				<Style Selector="^:pointerover">
					<Setter Property="Background" Value="{DynamicResource ControlPointeroverColor}" />
				</Style>
			</Style>
		</Style>
		<Style Selector="^.ClassAndSubjectSelection.Single ComboBoxItem /template/ ContentPresenter#PART_ContentPresenter">
			<Setter Property="Margin" Value="10 10 0 10"/>
		</Style>
		<Style Selector="^.EducationPeriodSelection">
			<Style Selector="^:disabled">
				<Style Selector="^ /template/ Border#Background">
					<Setter Property="Background" Value="{DynamicResource InputBackgroundColor}"/>
					<Setter Property="BorderBrush" Value="{DynamicResource StrokeColor}"/>
				</Style>
				<Style Selector="^ /template/ ContentControl#ContentPresenter">
					<Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
				</Style>
				<Style Selector="^ /template/ TextBlock#PlaceholderTextBlock">
					<Setter Property="Foreground" Value="{DynamicResource WatermarkOnTextControlColor}" />
				</Style>
				<Style Selector="^ /template/ PathIcon#DropDownGlyph">
					<Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
				</Style>
			</Style>
		</Style>
	</Style>
</Styles>
