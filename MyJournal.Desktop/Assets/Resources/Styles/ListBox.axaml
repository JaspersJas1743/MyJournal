<Styles xmlns="https://github.com/avaloniaui"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:entities="clr-namespace:MyJournal.Core.SubEntities;assembly=MyJournal.Core"
		xmlns:asyncImageLoader="clr-namespace:AsyncImageLoader;assembly=AsyncImageLoader.Avalonia"
		xmlns:controls="clr-namespace:MyJournal.Desktop.Assets.Controls"
		xmlns:chatUtilities="clr-namespace:MyJournal.Desktop.Assets.Utilities.ChatUtilities"
		xmlns:lottie="clr-namespace:Avalonia.Labs.Lottie;assembly=Avalonia.Labs.Lottie"
		xmlns:interaction="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
		xmlns:interactivity="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
		xmlns:converters="clr-namespace:MyJournal.Desktop.Assets.Resources.Converters"
		xmlns:tasksUtilities="clr-namespace:MyJournal.Desktop.Assets.Utilities.TasksUtilities"
		xmlns:utilities="clr-namespace:MyJournal.Desktop.Assets.Utilities"
		xmlns:marksUtilities="clr-namespace:MyJournal.Desktop.Assets.Utilities.MarksUtilities"
		xmlns:timetableUtilities="clr-namespace:MyJournal.Desktop.Assets.Utilities.TimetableUtilities">

	<Style Selector="ListBox">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
		<Setter Property="SelectionMode" Value="Single"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Background" Value="Transparent"/>
		<Style Selector="^.Sessions">
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" Spacing="15"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="entities:Session">
					<Border Width="270" Height="90" Classes="Session">
						<Grid RowDefinitions="15*, 5*, 10*, 40*, 20*" ColumnDefinitions="20*, 50*, 15*, 150*, 15*, 20*">
							<Ellipse Grid.Row="1" Grid.RowSpan="2" Fill="{DynamicResource ConfirmedDataColor}"
									Grid.Column="4" IsVisible="{Binding IsCurrentSession}"/>
							<asyncImageLoader:AdvancedImage Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Source="{Binding ClientLogoLink}"/>
							<StackPanel Grid.Row="2" Grid.RowSpan="2" Grid.Column="3" Grid.ColumnSpan="2" Orientation="Vertical" Spacing="5">
								<TextBlock Text="{Binding ClientName}" FontSize="20"/>
								<TextBlock Text="{Binding Ip}" FontSize="20"/>
							</StackPanel>
						</Grid>
					</Border>
				</DataTemplate>
			</Setter>
		</Style>
		<Style Selector="^.StartedPage">
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" Spacing="15"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>
		<Style Selector="^.OpacityTransition">
			<Setter Property="Transitions">
				<Transitions>
					<DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
				</Transitions>
			</Setter>
		</Style>
		<Style Selector="^.Chats">
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:ObservableChat">
					<Viewbox Width="490" Height="115">
						<Grid	Width="505" ColumnDefinitions="15*, 70*, 15*, 15*, 255*, 70*, 20*, 5*, 15*, 5*, 10*, 10*"
								Height="115" RowDefinitions="15*, 25*, 5*, 10*, 20*, 10*, 15*, 5*, 10*">
							<Border Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" Grid.RowSpan="7"
									Classes="ChatPhoto TransitionBorderBrush TransitionBorderThickness"
									Classes.DefaultChatPhoto="{Binding Photo,
									Converter={StaticResource PhotoLinkIsDefaultConverter}}">
								<asyncImageLoader:AdvancedImage	x:Name="Image" Classes.LargeChatPhoto="{Binding Photo,
																Converter={StaticResource PhotoLinkIsDefaultConverter}}"
																Source="{Binding Photo}" Stretch="UniformToFill"/>
							</Border>
							<Ellipse	Opacity="{Binding Activity,Converter={StaticResource ActivityToDoubleConverter}}"
										Fill="{DynamicResource OnlineStatusColor}" Grid.Row="6" Grid.Column="2" Classes="OpacityTransition"/>
							<TextBlock	Grid.Row="1" Grid.Column="4" Text="{Binding Name}" Classes="ChatHeader" x:Name="PART_Name"/>
							<TextBlock	Text="{Binding Content,TargetNullValue='Сообщения в чате отсутствуют :('}" Grid.Row="3"
										Classes="ChatLastMessage" Grid.RowSpan="5" Grid.Column="4" Grid.ColumnSpan="2" x:Name="PART_LastMessageIsFile">
								<TextBlock.IsVisible>
									<MultiBinding Converter="{x:Static BoolConverters.And}">
										<Binding	Path="IsFile" TargetNullValue="{x:True}"
													Converter="{x:Static BoolConverters.Not}"/>
										<Binding	Converter="{StaticResource StringIsNullOrWhiteSpaceConverter}"
													Path="Draft" TargetNullValue="{x:False}"/>
									</MultiBinding>
								</TextBlock.IsVisible>
							</TextBlock>
							<TextBlock	Grid.Row="3" Grid.RowSpan="5" Grid.Column="4" Grid.ColumnSpan="2" x:Name="PART_LastMessage"
										Text="Вложение" Classes="ChatLastMessage">
								<TextBlock.IsVisible>
									<MultiBinding Converter="{x:Static BoolConverters.And}">
										<Binding Path="IsFile" TargetNullValue="{x:False}"/>
										<Binding	Converter="{StaticResource StringIsNullOrWhiteSpaceConverter}"
													Path="Draft" TargetNullValue="{x:False}"/>
									</MultiBinding>
								</TextBlock.IsVisible>
							</TextBlock>
							<StackPanel Grid.Row="3" Grid.RowSpan="5" Grid.Column="4" Grid.ColumnSpan="2" Spacing="2.5" Orientation="Horizontal"
										IsVisible="{Binding Draft,TargetNullValue={x:False},
										Converter={StaticResource StringIsNotNullOrWhiteSpaceConverter}}">
								<TextBlock	Text="Черновик: " Classes="ChatDraftMessage"/>
								<TextBlock	Text="{Binding Draft}" Classes="ChatLastMessage"/>
							</StackPanel>
							<TextBlock	Grid.Column="5" Grid.ColumnSpan="6" Grid.Row="1" x:Name="PART_DateOfLastMessage" Classes="ChatLastMessageDate"
										Text="{Binding CreatedAt,TargetNullValue='',StringFormat='d MMMM'}"/>
							<Ellipse Fill="{DynamicResource MainAccentColor}" Grid.Row="4" Grid.Column="7" Grid.ColumnSpan="2">
								<Ellipse.IsVisible>
									<MultiBinding Converter="{x:Static BoolConverters.And}">
										<Binding Path="NotFromMe"/>
										<Binding Path="!IsRead"/>
									</MultiBinding>
								</Ellipse.IsVisible>
							</Ellipse>
							<controls:XamlSvg   Classes="ReadMark TransitionForeground" Grid.Row="6" Grid.Column="7" Grid.ColumnSpan="2"
												Foreground="{DynamicResource MainAccentColor}">
								<controls:XamlSvg.Opacity>
									<MultiBinding Converter="{x:Static converters:BoolToDoubleMultiValueConverter.And}">
										<Binding Path="FromMe"/>
										<Binding Path="IsRead"/>
									</MultiBinding>
								</controls:XamlSvg.Opacity>
							</controls:XamlSvg>
							<controls:XamlSvg   Classes="ReadMark TransitionForeground" Grid.Row="6" Grid.Column="8" Grid.ColumnSpan="2"
												Foreground="{DynamicResource MainAccentColor}"
												IsVisible="{Binding FromMe}"/>
						</Grid>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>
		<Style Selector="^.AttachmentsList">
			<Setter Property="HorizontalAlignment" Value="Left" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" Spacing="10"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:Attachment">
					<Viewbox Height="50">
						<Border Height="50" CornerRadius="15" Background="{DynamicResource MainAccentColor}">
							<StackPanel Orientation="Horizontal" Spacing="10" Margin="10 0">
								<Grid>
									<TextBlock	Text="{Binding FileName}" Classes="AttachmentName"
												IsVisible="{Binding IsLoaded}"/>
									<lottie:Lottie	Path="/Assets/Resources/Animations/Loading.json" HorizontalAlignment="Left"
													IsVisible="{Binding !IsLoaded}"/>
								</Grid>
								<Button Classes="RemoveAttachment" Command="{Binding Remove}"/>
							</StackPanel>
						</Border>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>
		<Style Selector="^.AttachmentsOnMessage">
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Spacing="5"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:ExtendedAttachment">
					<Viewbox>
						<Button Command="{Binding Download}" Classes="Corner10 MainAccentColor"
								CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
								Height="35" MaxWidth="510" Padding="10 0">
							<Button.Content>
								<TextBlock Text="{Binding FileName}" FontSize="20"/>
							</Button.Content>
							<Button.Flyout>
								<Flyout ShowMode="TransientWithDismissOnPointerMoveAway" Placement="Bottom">
									Файл успешно сохранен!
								</Flyout>
							</Button.Flyout>
						</Button>
					</Viewbox>
				</DataTemplate>
			</Setter>
			<Style Selector="^:empty">
				<Setter Property="IsVisible" Value="False"/>
			</Style>
		</Style>
		<Style Selector="^.Messages">
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="SelectionMode" Value="Single"/>
			<Setter Property="AutoScrollToSelectedItem" Value="True"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" />
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:ExtendedMessage">
					<Border MaxWidth="600" Classes.NotFromMe="{Binding !Message.FromMe}"
							MinHeight="55" Classes.FromMe="{Binding Message.FromMe}"
							CornerRadius="20" Margin="20 12.5" Padding="15 10">
						<StackPanel Orientation="Horizontal" Spacing="10">
							<StackPanel Orientation="Vertical" Spacing="5" VerticalAlignment="Center">
								<TextBlock	Text="{Binding Message.SenderName}"
											Foreground="{DynamicResource DateTimeColor}"
											HorizontalAlignment="Left" VerticalAlignment="Top">
									<TextBlock.IsVisible>
										<MultiBinding Converter="{x:Static BoolConverters.And}">
											<Binding Path="!IsSingleChat"/>
											<Binding Path="!Message.FromMe"/>
										</MultiBinding>
									</TextBlock.IsVisible>
								</TextBlock>
								<SelectableTextBlock	Text="{Binding Message.Text}" Classes="Message"
														IsVisible="{Binding Message.Text,
														Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
								<ListBox	MaxWidth="510" Classes="AttachmentsOnMessage" VerticalAlignment="Center"
											ItemsSource="{Binding Attachments}"/>
							</StackPanel>
							<Grid Width="50">
								<TextBlock	VerticalAlignment="Top" Text="{Binding Message.CreatedAt,StringFormat='HH:mm'}"
											FontSize="15" Foreground="{DynamicResource DateTimeColor}"
											HorizontalAlignment="Right"/>
								<Grid ColumnDefinitions="5*, 15*, 5*" HorizontalAlignment="Right" VerticalAlignment="Bottom">
									<controls:XamlSvg	Grid.Column="0" Grid.ColumnSpan="2" Classes="ReadMark TransitionForeground"
														Foreground="{DynamicResource MainAccentColor}"
														VerticalAlignment="Bottom" Height="15">
										<controls:XamlSvg.Opacity>
											<MultiBinding Converter="{x:Static converters:BoolToDoubleMultiValueConverter.And}">
												<Binding Path="Message.FromMe"/>
												<Binding Path="MessageIsRead"/>
											</MultiBinding>
										</controls:XamlSvg.Opacity>
									</controls:XamlSvg>
									<controls:XamlSvg Grid.Column="1" Grid.ColumnSpan="2" Classes="ReadMark TransitionForeground" VerticalAlignment="Bottom"
													Foreground="{DynamicResource MainAccentColor}" Height="15"
													IsVisible="{Binding Message.FromMe}"/>
								</Grid>
							</Grid>
						</StackPanel>
					</Border>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.Interlocutors">
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="SelectionMode" Value="Single"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:ExtendedInterlocutor">
					<Grid ColumnDefinitions="10*, 50*, 10*, 400*" Width="470" Height="50" Margin="10 10 0 10">
						<Border Grid.Column="1" CornerRadius="10" HorizontalAlignment="Left"
								Classes.DefaultChatPhoto="{Binding Photo,
								Converter={StaticResource PhotoLinkIsDefaultConverter}}">
							<asyncImageLoader:AdvancedImage Source="{Binding Photo}" Stretch="Fill"
															Classes.SmallChatPhoto="{Binding Photo,
															Converter={StaticResource PhotoLinkIsDefaultConverter}}"/>
						</Border>
						<TextBlock Grid.Column="3" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" HorizontalAlignment="Left"
									FontSize="20" Text="{Binding FullName}" TextAlignment="Left"/>
					</Grid>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.MultiChatInterlocutors">
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:ExtendedInterlocutor">
					<Grid	ColumnDefinitions="10*, 50*, 10*, 350*, 10*, 30*, 10*, 10*" RowDefinitions="10*, 30*, 10*"
							Width="480" Height="50" Margin="10 10 0 10">
						<Border Grid.Row="0" Grid.Column="1" CornerRadius="10" HorizontalAlignment="Left"
								Grid.RowSpan="3" Classes.DefaultChatPhoto="{Binding Photo,
								Converter={StaticResource PhotoLinkIsDefaultConverter}}">
							<asyncImageLoader:AdvancedImage Source="{Binding Photo}" Stretch="Fill"
															Classes.SmallChatPhoto="{Binding Photo,
															Converter={StaticResource PhotoLinkIsDefaultConverter}}"/>
						</Border>
						<TextBlock	Grid.Row="0" Grid.RowSpan="3" Grid.Column="3" TextTrimming="CharacterEllipsis"
									Text="{Binding FullName}" TextAlignment="Left"
									VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="20"/>
						<CheckBox Grid.Column="5" Grid.Row="1" Classes="SelectionIndicator" IsHitTestVisible="False"/>
					</Grid>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.Subjects">
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>

		<Style Selector="^.Tasks">
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="HorizontalAlignment" Value="Center" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<WrapPanel Orientation="Horizontal" Width="1350" HorizontalAlignment="Center" Margin="0 10"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>

		<Style Selector="^.StudyingSubjects">
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="utilities:StudentSubjectBase">
					<Grid Margin="20 10" Width="450" Height="50">
						<StackPanel Orientation="Vertical" VerticalAlignment="Center">
							<TextBlock	Text="{Binding Name}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource ForegroundColor}"
										VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="SubjectName"/>
							<TextBlock	Text="{Binding Teacher.FullName}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource SubheaderColor}"
										IsVisible="{Binding Teacher,Converter={x:Static ObjectConverters.IsNotNull}}"
										VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="SubjectTeacher"/>
						</StackPanel>
					</Grid>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.TimetableSubjects">
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="timetableUtilities:Subject">
					<Grid Margin="20 10" Width="450" Height="50">
						<StackPanel Orientation="Vertical" VerticalAlignment="Center">
							<TextBlock	Text="{Binding Name}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource ForegroundColor}"
										VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="SubjectName"/>
							<TextBlock	Text="{Binding Teacher.FullName}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource SubheaderColor}"
										VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="SubjectTeacher"
										IsVisible="{Binding Teacher,Converter={x:Static ObjectConverters.IsNotNull}}"/>
							<TextBlock	Text="{Binding ClassName}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource SubheaderColor}"
										VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="SubjectTeacher"
										IsVisible="{Binding ClassName,Converter={x:Static ObjectConverters.IsNotNull}}"/>
						</StackPanel>
					</Grid>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.TeacherSubjects">
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="utilities:TeacherSubjectBase">
					<Grid Margin="20 10" Width="450" Height="50">
						<StackPanel Orientation="Vertical" VerticalAlignment="Center">
							<TextBlock	Text="{Binding Name}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource ForegroundColor}"
										VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="SubjectName"/>
							<TextBlock	Text="{Binding ClassName}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource SubheaderColor}"
										IsVisible="{Binding ClassName,Converter={x:Static ObjectConverters.IsNotNull}}"
										VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="SubjectTeacher"/>
						</StackPanel>
					</Grid>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.Classes">
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="timetableUtilities:Class">
					<Grid Margin="20 0" Width="450" Height="50">
						<TextBlock	Text="{Binding Name}" TextTrimming="CharacterEllipsis" Foreground="{DynamicResource ForegroundColor}"
									VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left" FontSize="20" Classes="ClassName"/>
					</Grid>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.AssignedTasks">
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="tasksUtilities:ObservableReceivedTask">
					<Border BorderBrush="{DynamicResource StrokeColor}" CornerRadius="15"
							Classes="TransitionBackground TransitionBorderBrush" BorderThickness="5"
							Background="Transparent" Width="645" Height="400" >
						<interactivity:Interaction.Behaviors>
							<interaction:EventTriggerBehavior EventName="AttachedToVisualTree">
								<interaction:InvokeCommandAction Command="{Binding OnAttachedToVisualTree}"/>
							</interaction:EventTriggerBehavior>
							<interaction:EventTriggerBehavior EventName="DetachedFromVisualTree">
								<interaction:InvokeCommandAction Command="{Binding OnDetachedFromVisualTree}"/>
							</interaction:EventTriggerBehavior>
						</interactivity:Interaction.Behaviors>
						<Grid RowDefinitions="50*, 290*, 50*, 10*" ColumnDefinitions="10*, 150*, 25*, 300*, 25*, 125*, 10*">
							<Border Grid.Row="0" Grid.Column="0" BorderBrush="{DynamicResource StrokeColor}"
									Classes.AssignedTaskIsExpired="{Binding IsExpired}"
									Classes.AssignedTaskNotIsExpired="{Binding !IsExpired}"
									IsVisible="{Binding ShowLessonName}" Padding="20 0 0 0">
								<TextBlock	Width="490" VerticalAlignment="Center" FontSize="20"
											Text="{Binding LessonName}" TextTrimming="CharacterEllipsis"
											Classes.TaskIsExpired="{Binding IsExpired}"
											Classes.TaskNotIsExpired="{Binding !IsExpired}"/>
							</Border>
							<Border Grid.Row="0" Grid.Column="5" Grid.ColumnSpan="2"
									IsVisible="{Binding !IsExpired}"
									Classes.AllSubjects="{Binding ShowLessonName}"
									Classes.NotAllSubjects="{Binding !ShowLessonName}"
									BorderBrush="{DynamicResource StrokeColor}">
								<TextBlock	HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" TextAlignment="Center"
											Text="{Binding ReleasedTime}" TextTrimming="CharacterEllipsis"/>
							</Border>
							<SelectableTextBlock	IsVisible="{Binding Text,Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
													Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="7" Margin="20 20 20 0" TextTrimming="CharacterEllipsis"
													TextAlignment="Center" Text="{Binding Text}" FontSize="20"
													HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<TextBlock	IsVisible="{Binding Text,Converter={x:Static StringConverters.IsNullOrEmpty}}"
										Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="7" Margin="20 20 20 0" TextTrimming="CharacterEllipsis"
										TextAlignment="Center" Text="Текст задания отсутствует" Foreground="{DynamicResource StrokeColor}"
										FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center"/>
							<Viewbox Grid.Row="2" Grid.Column="1">
								<controls:ButtonWithAnimatedCommand Background="{DynamicResource CompletedTaskColor}" Content="Выполнено"
																	IsEnabled="{Binding !Observable.IsReceivedToWard}"
																	Width="150" Height="50" FontSize="20" Classes="Corner10 TaskStatus"
																	Command="{Binding MarkUncompleted}"
																	IsVisible="{Binding IsCompleted}"/>
							</Viewbox>
							<Viewbox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
								<controls:ButtonWithAnimatedCommand Background="{DynamicResource UncompletedTaskColor}" FontSize="20"
																	IsEnabled="{Binding !Observable.IsReceivedToWard}"
																	Content="Не выполнено" Classes="Corner10 TaskStatus" Width="175" Height="50"
																	IsVisible="{Binding IsUncompleted}"
																	Command="{Binding MarkCompleted}"/>
							</Viewbox>
							<Viewbox Grid.Row="2" Grid.Column="1">
								<controls:ButtonWithAnimatedCommand Background="{DynamicResource ExpiredTaskColor}" IsEnabled="False"
																	Content="Завершено" IsVisible="{Binding IsExpired}"
																	Width="150" Height="50" FontSize="20" Classes="Corner10 TaskStatus"/>
							</Viewbox>
							<Viewbox Grid.Row="2" Grid.Column="4" Grid.ColumnSpan="2">
								<controls:ButtonWithAnimatedCommand Background="{DynamicResource MainAccentColor}"
																	Content="Вложения" IsVisible="{Binding !!Attachments.Count}"
																	Command="{Binding ShowAttachments}"
																	Width="150" Height="50" FontSize="20" Classes="Corner10"/>
							</Viewbox>
						</Grid>
					</Border>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.CreatedTasks">
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="tasksUtilities:ObservableCreatedTask">
					<Border BorderBrush="{DynamicResource StrokeColor}" CornerRadius="15"
							Classes="TransitionBackground TransitionBorderBrush" BorderThickness="5"
							Background="Transparent" Width="645" Height="400" >
						<interactivity:Interaction.Behaviors>
							<interaction:EventTriggerBehavior EventName="AttachedToVisualTree">
								<interaction:InvokeCommandAction Command="{Binding OnAttachedToVisualTree}"/>
							</interaction:EventTriggerBehavior>
							<interaction:EventTriggerBehavior EventName="DetachedFromVisualTree">
								<interaction:InvokeCommandAction Command="{Binding OnDetachedFromVisualTree}"/>
							</interaction:EventTriggerBehavior>
						</interactivity:Interaction.Behaviors>
						<Grid RowDefinitions="50*, 290*, 50*, 10*" ColumnDefinitions="10*, 140*, 20*, 10*, 200*, 125*, 20*, 115*, 10*">
							<Border Grid.Row="0" Grid.Column="0" BorderBrush="{DynamicResource StrokeColor}"
									IsVisible="{Binding ShowClassAndLesson}"
									BorderThickness="0 0 0 5" Grid.ColumnSpan="2">
								<TextBlock	Text="{Binding Class}" TextTrimming="CharacterEllipsis"
											VerticalAlignment="Center" FontSize="20" HorizontalAlignment="Center"/>
							</Border>
							<Border Padding="20 0 0 0"
									Classes.TaskIsExpired="{Binding IsExpired}"
									Classes.TaskNotIsExpired="{Binding !IsExpired}"
									Grid.Row="0" Grid.Column="2" BorderBrush="{DynamicResource StrokeColor}"
									IsVisible="{Binding ShowClassAndLesson}">
								<TextBlock	Text="{Binding Lesson}" TextTrimming="CharacterEllipsis"
											Width="345" VerticalAlignment="Center" FontSize="20" HorizontalAlignment="Center"
											Classes.TaskNotIsExpired="{Binding !IsExpired}"
											Classes.TaskIsExpired="{Binding IsExpired}"/>
							</Border>
							<Border Grid.Row="0" Grid.Column="7" BorderBrush="{DynamicResource StrokeColor}"
									Classes.NotAllSubjects="{Binding !ShowClassAndLesson}"
									IsVisible="{Binding !IsExpired}" Grid.ColumnSpan="2"
									Classes.AllSubjects="{Binding ShowClassAndLesson}">
								<TextBlock	Text="{Binding ReleasedTime}" TextTrimming="CharacterEllipsis"
											VerticalAlignment="Center" FontSize="20" HorizontalAlignment="Center"/>
							</Border>
							<SelectableTextBlock	IsVisible="{Binding Text,Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
													Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="9" Margin="20 20 20 0" TextTrimming="CharacterEllipsis"
													TextAlignment="Center" Text="{Binding Text}" FontSize="20" HorizontalAlignment="Center"
													VerticalAlignment="Center"/>
							<TextBlock	FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource StrokeColor}"
										IsVisible="{Binding Text,Converter={x:Static StringConverters.IsNullOrEmpty}}"
										Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="9" TextAlignment="Center" Text="Текст задания отсутствует."/>
							<Viewbox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
								<controls:ButtonWithAnimatedCommand Background="{DynamicResource CompletedTaskColor}" IsEnabled="False"
																	Content="{Binding CountOfCompletedTask,StringFormat='Выполнено: {0}'}"
																	Width="160" Height="50" FontSize="20" Classes="Corner10 TaskStatus"
																	IsVisible="{Binding !IsExpired}"/>
							</Viewbox>
							<Viewbox Grid.Row="2" Grid.Column="4">
								<controls:ButtonWithAnimatedCommand Content="{Binding CountOfUncompletedTask,StringFormat='Не выполнено: {0}'}"
																	Background="{DynamicResource UncompletedTaskColor}" FontSize="20"
																	IsEnabled="False" Classes="Corner10 TaskStatus" Width="200" Height="50"
																	IsVisible="{Binding !IsExpired}"/>
							</Viewbox>
							<Viewbox Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
								<controls:ButtonWithAnimatedCommand Background="{DynamicResource ExpiredTaskColor}" IsEnabled="False"
																	Content="Завершено" IsVisible="{Binding IsExpired}"
																	Width="160" Height="50" FontSize="20" Classes="Corner10 TaskStatus"/>
							</Viewbox>
							<Viewbox Grid.Row="2" Grid.Column="6" Grid.ColumnSpan="2">
								<controls:ButtonWithAnimatedCommand Background="{DynamicResource MainAccentColor}"
																	Content="Вложения" IsVisible="{Binding !!Attachments.Count}"
																	Command="{Binding ShowAttachments}"
																	Width="150" Height="50" FontSize="20" Classes="Corner10"/>
							</Viewbox>
						</Grid>
					</Border>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.TaskAttachments">
			<Setter Property="VerticalAlignment" Value="Top" />
			<Setter Property="HorizontalAlignment" Value="Stretch" />
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Spacing="10"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:ExtendedAttachment">
					<Viewbox>
						<Button Command="{Binding Download}" Classes="Corner10 MainAccentColor"
								CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}"
								Height="35" MaxWidth="280" Padding="10 0">
							<Button.Content>
								<TextBlock	Text="{Binding FileName}" FontSize="20"
											TextTrimming="CharacterEllipsis"/>
							</Button.Content>
							<Button.Flyout>
								<Flyout ShowMode="TransientWithDismissOnPointerMoveAway" Placement="Bottom">
									Файл успешно сохранен!
								</Flyout>
							</Button.Flyout>
						</Button>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.CreatedAttachmentsList">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Spacing="10"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="chatUtilities:Attachment">
					<Viewbox Height="50" Width="270">
						<Border Height="50" Width="280" CornerRadius="15" Background="{DynamicResource MainAccentColor}">
							<Grid ColumnDefinitions="10*, 230*, 10*, 20*, 10*">
								<Grid Grid.Column="1">
									<TextBlock	Text="{Binding FileName}" Classes="AttachmentName"
												IsVisible="{Binding IsLoaded}"/>
									<lottie:Lottie	Path="/Assets/Resources/Animations/Loading.json" HorizontalAlignment="Left"
													IsVisible="{Binding !IsLoaded}"/>
								</Grid>
								<Button Grid.Column="3" Classes="RemoveAttachment" Command="{Binding Remove}"/>
							</Grid>
						</Border>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.Estimation">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<WrapPanel Orientation="Horizontal" Width="1350" HorizontalAlignment="Center" Margin="0 10"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="marksUtilities:ObservableEstimation">
					<Viewbox Height="90" Width="90" Margin="10">
						<Border Height="90" Width="90" CornerRadius="15" ToolTip.Tip="{Binding Description}" ToolTip.ShowDelay="150"
								Classes.Five="{Binding Assessment,Converter={x:Static converters:GradeConverters.IsFive}}"
								Classes.Four="{Binding Assessment,Converter={x:Static converters:GradeConverters.IsFour}}"
								Classes.Three="{Binding Assessment,Converter={x:Static converters:GradeConverters.IsThree}}"
								Classes.Two="{Binding Assessment,Converter={x:Static converters:GradeConverters.IsTwo}}"
								Classes.Truancy="{Binding GradeType,Converter={x:Static converters:GradeConverters.IsTruancy}}"
								Classes="TransitionBackground">
							<Grid RowDefinitions="20*, 10*, 30*, 10*, 20*">
								<TextBlock Grid.Row="0" Grid.RowSpan="2" Text="{Binding Comment}" VerticalAlignment="Center"
											TextAlignment="Center" FontSize="16" x:Name="PART_Comment" Classes="OpacityTransition"
											Foreground="{DynamicResource TextOnSelectedControlColor}"
											Opacity="{Binding $parent[ListBoxItem].IsPointerOver}"/>
								<TextBlock Grid.Row="1" Grid.RowSpan="3" Text="{Binding Assessment}" VerticalAlignment="Center"
											Foreground="{DynamicResource TextOnSelectedControlColor}"
											TextAlignment="Center" FontSize="32" x:Name="PART_Assessment"/>
								<TextBlock	Grid.Row="3" Grid.RowSpan="2" Text="{Binding CreatedAt,StringFormat='dd.MM'}"
											Foreground="{DynamicResource TextOnSelectedControlColor}"
											VerticalAlignment="Center" TextAlignment="Center" FontSize="16" x:Name="PART_CreatedAt"
											Opacity="{Binding $parent[ListBoxItem].IsPointerOver}" Classes="OpacityTransition"/>
							</Grid>
						</Border>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.TeacherEstimation">
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<ReversibleStackPanel Orientation="Horizontal" HorizontalAlignment="Center" Spacing="5" ReverseOrder="True"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>

		<Style Selector="^.Students">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Width="1320" HorizontalAlignment="Center" Spacing="20" Margin="20"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>

		<Style Selector="^.StudentsAttendance">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Width="1320" HorizontalAlignment="Center" Spacing="20" Margin="20 0 20 20"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="marksUtilities:ObservableStudent">
					<Border Width="1320" Height="90" x:Name="PART_Border" BorderBrush="{DynamicResource StrokeColor}"
							BorderThickness="5" ClipToBounds="True" CornerRadius="15"
							Background="{DynamicResource BackgroundColor}"
							Classes="HeightTransition">
						<Grid ColumnDefinitions="50*, 20*, 465*, 795*">
							<Border Grid.Column="0" BorderBrush="{DynamicResource StrokeColor}"
									BorderThickness="0 0 5 0">
								<TextBlock Text="{Binding Position}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
							</Border>
							<TextBlock	Grid.Column="2" Text="{Binding Converter={x:Static converters:ObservableStudentConverters.FullName}}"
										TextTrimming="CharacterEllipsis" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left"/>
							<StackPanel Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Left" Spacing="10" Margin="10">
								<TextBlock Text="на занятии" FontSize="20" VerticalAlignment="Center"/>
								<Viewbox Height="50">
									<RadioButton	GroupName="{Binding Converter={x:Static converters:ObservableStudentConverters.FullName}}"
													Width="155" Height="50" Content="присутствует" FontSize="20" IsChecked="{Binding IsAttend}"/>
								</Viewbox>
								<Viewbox Height="50">
									<RadioButton	GroupName="{Binding Converter={x:Static converters:ObservableStudentConverters.FullName}}"
													Width="140" Height="50" Content="отсутствует" FontSize="20" IsChecked="{Binding !IsAttend}"/>
								</Viewbox>
								<TextBlock	Text="из-за" Opacity="{Binding !IsAttend,
											Converter={StaticResource BoolToDoubleConverter}}"
											FontSize="20" VerticalAlignment="Center" Classes="OpacityTransition"/>
								<ListBox	ItemsSource="{Binding TruancyComments}"
											Opacity="{Binding !IsAttend,
											Converter={StaticResource BoolToDoubleConverter}}"
											SelectedItem="{Binding SelectedAttendanceComment,Mode=TwoWay}"
											Classes="CommentsForPossibleAssessments OpacityTransition"/>
							</StackPanel>
						</Grid>
					</Border>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.StudentsFinalGrades">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Width="1320" HorizontalAlignment="Center" Spacing="20" Margin="20 0 20 20"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="marksUtilities:ObservableStudent">
					<Border Width="1320" Height="90" x:Name="PART_Border" BorderBrush="{DynamicResource StrokeColor}"
							BorderThickness="5" ClipToBounds="True" CornerRadius="15"
							Background="{DynamicResource BackgroundColor}"
							Classes="HeightTransition">
						<interactivity:Interaction.Behaviors>
							<interaction:EventTriggerBehavior EventName="AttachedToVisualTree">
								<interaction:InvokeCommandAction Command="{Binding OnAttachedToVisualTree}"/>
							</interaction:EventTriggerBehavior>
						</interactivity:Interaction.Behaviors>
						<Grid ColumnDefinitions="50*, 20*, 680*, 550*, 20*">
							<Border Grid.Column="0" BorderBrush="{DynamicResource StrokeColor}"
									BorderThickness="0 0 5 0">
								<TextBlock Text="{Binding Position}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20"/>
							</Border>
							<TextBlock	Grid.Column="2" Text="{Binding Converter={x:Static converters:ObservableStudentConverters.FullName}}"
										TextTrimming="CharacterEllipsis" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left"/>
							<StackPanel Grid.Column="3" Orientation="Horizontal" HorizontalAlignment="Left" Spacing="20" Margin="0 10">
								<ListBox	Classes="PossibleAssessments" ItemsSource="{Binding PossibleAssessments,
											Converter={x:Static converters:AssessmentsConverters.OnlyAssessments}}"
											SelectedItem="{Binding SelectedFinalAssessment,Mode=TwoWay}"
											IsEnabled="{Binding Grade.FinalAssessment,
											Converter={x:Static converters:IntegerConverters.IsNull}}"/>
								<Viewbox Width="260" Height="50">
									<controls:ButtonWithAnimatedCommand Width="260" Height="50" Classes="MainAccentColor Corner10" FontSize="20"
																		Classes.HaveFinalGrade="{Binding Grade.FinalAssessment,
																		Converter={x:Static converters:IntegerConverters.IsNotNull}}"
																		Classes.NotHaveFinalGrade="{Binding Grade.FinalAssessment,
																		Converter={x:Static converters:IntegerConverters.IsNull}}"
																		Classes.NotSelectedFinalGrade="{Binding SelectedFinalAssessment,
																		Converter={x:Static ObjectConverters.IsNull}}"
																		Command="{Binding SaveFinalEstimation}"/>
								</Viewbox>
							</StackPanel>
						</Grid>
					</Border>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.PossibleAssessments">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" Spacing="10"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>

		<Style Selector="^.CommentsForPossibleAssessments">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Horizontal" Spacing="10"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>

		<Style Selector="^.Days">
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical"/>
				</ItemsPanelTemplate>
			</Setter>
		</Style>

		<Style Selector="^.TimetableByDate">
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Spacing="20" Width="1640"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="timetableUtilities:Timetable">
					<Viewbox Width="1640" Height="130">
						<Grid RowDefinitions="55*, 20*, 55*" Width="1650" Height="130">
							<Border Grid.Row="0" BorderBrush="{DynamicResource StrokeColor}"
									BorderThickness="5" CornerRadius="10">
								<Grid ColumnDefinitions="45*, 150*, 1285, 170*">
									<TextBlock	Grid.Column="0" Text="{Binding Subject.Number}"
												FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center"/>
									<Border Grid.Column="1" BorderBrush="{DynamicResource StrokeColor}" BorderThickness="5 0 0 0"
											IsVisible="{Binding IsTeacher}">
										<TextBlock	TextTrimming="CharacterEllipsis" Margin="20 0" FontSize="20"
													VerticalAlignment="Center" HorizontalAlignment="Center"
													Text="{Binding Subject.ClassName}"/>
									</Border>
									<Border BorderBrush="{DynamicResource StrokeColor}" BorderThickness="5 0"
											Classes.Teacher="{Binding IsTeacher}"
											Classes.NotTeacher="{Binding !IsTeacher}">
										<TextBlock	TextTrimming="CharacterEllipsis" Margin="20 0" FontSize="20"
													VerticalAlignment="Center" HorizontalAlignment="Left"
													Text="{Binding Subject.Name}"/>
									</Border>
									<TextBlock	Grid.Column="3" Text="{Binding Subject,
												Converter={x:Static converters:DateTimeConverters.During}}"
												FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center"/>
								</Grid>
							</Border>
							<Grid Grid.Row="2" ColumnDefinitions="10*, 25*, 10*, 1605*" Classes="Break">
								<lottie:Lottie Grid.Column="1" Path="/Assets/Resources/Animations/Break.json" Margin="-20 -20 -20 0"/>
								<TextBlock	Grid.Column="3" Text="{Binding Break.CountMinutes,StringFormat='Перерыв {0} минут',FallbackValue=''}"
											FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"/>
							</Grid>
						</Grid>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.TimetableBySubject">
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Spacing="20" Width="1320" Margin="0 20"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="timetableUtilities:Timetable">
					<Viewbox Width="1320" Height="55">
							<Border BorderThickness="5" CornerRadius="10" Width="1320" Height="55"
									BorderBrush="{DynamicResource StrokeColor}">
								<Grid ColumnDefinitions="45*, 1105, 170*">
									<TextBlock	Grid.Column="0" Text="{Binding Subject.Number}"
												FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center"/>
									<Border Grid.Column="1" BorderBrush="{DynamicResource StrokeColor}" BorderThickness="5 0">
										<TextBlock	TextTrimming="CharacterEllipsis" Margin="20 0" FontSize="20"
													VerticalAlignment="Center" HorizontalAlignment="Left"
													Text="{Binding Subject.Date,StringFormat='d MMMM'}"/>
									</Border>
									<TextBlock	Grid.Column="2" Text="{Binding Subject,
												Converter={x:Static converters:DateTimeConverters.During}}"
												FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Center"/>
								</Grid>
							</Border>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>

		<Style Selector="^.TimetableOnSubjectCreation">
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Margin" Value="0" />
			<Setter Property="Padding" Value="0" />
			<Setter Property="ItemsPanel">
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" Spacing="10" Width="1320" Margin="0 10"/>
				</ItemsPanelTemplate>
			</Setter>
			<Setter Property="ItemTemplate">
				<DataTemplate DataType="timetableUtilities:SubjectOnTimetable">
					<Viewbox Width="1320" x:Name="PART_Viewbox">
						<Grid RowDefinitions="55*, 20*, 55*" Width="1320" Background="Transparent" x:Name="PART_Host">
							<Grid.ContextMenu>
								<ContextMenu>
									<MenuItem	Header="Удалить занятие" Foreground="{DynamicResource ErrorColor}"
												Command="{Binding RemoveSubject}"/>
								</ContextMenu>
							</Grid.ContextMenu>
							<Border x:Name="PART_Border" BorderBrush="{DynamicResource StrokeColor}"
									Grid.Row="0" BorderThickness="5" CornerRadius="10">
								<Grid ColumnDefinitions="55*, 1105*, 170*">
									<Viewbox Grid.Column="0">
										<ComboBox	PlaceholderForeground="{DynamicResource StrokeColor}" FontSize="24"
													Classes="Empty" ItemsSource="{Binding PossibleNumbers}"
													SelectedItem="{Binding Number}" Width="55" Height="55"
													HorizontalContentAlignment="Center" Padding="0 10" PlaceholderText="№"/>
									</Viewbox>
									<Border Grid.Column="1" BorderBrush="{DynamicResource StrokeColor}" BorderThickness="5 0 5 0">
										<Viewbox>
 											<ComboBox	Classes="Empty" ItemsSource="{Binding PossibleSubjects}" Padding="20 10"
														DisplayMemberBinding="{Binding Name}" Height="45" HorizontalContentAlignment="Left"
														PlaceholderText="Не выбрано" PlaceholderForeground="{DynamicResource StrokeColor}"
														SelectedItem="{Binding SelectedSubject,Mode=TwoWay}" Width="1075" FontSize="20"/>
										</Viewbox>
									</Border>
									<StackPanel Orientation="Horizontal" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center">
										<TimePicker Classes="Empty" SelectedTime="{Binding Start}"
													Background="Transparent" MinuteIncrement="5"/>
										<TextBlock FontSize="20" Text="-" VerticalAlignment="Center"/>
										<TimePicker Classes="Empty" SelectedTime="{Binding End}"
													Background="Transparent" MinuteIncrement="5"/>
									</StackPanel>
								</Grid>
							</Border>
							<Grid Grid.Row="2" ColumnDefinitions="10*, 25*, 10*, 1605*" Classes="Break" x:Name="PART_BreakPresenter">
								<lottie:Lottie Grid.Column="1" Path="/Assets/Resources/Animations/Break.json" Margin="-20 -20 -20 0"/>
								<TextBlock	Grid.Column="3" Text="{Binding Break,StringFormat='Перерыв {0} минут',FallbackValue='Перерыв __ минут',
											TargetNullValue='Перерыв __ минут'}" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Left" TextAlignment="Left"/>
							</Grid>
						</Grid>
					</Viewbox>
				</DataTemplate>
			</Setter>
		</Style>
		<Style Selector="^ Grid#PART_Host">
			<Setter Property="Height" Value="130"/>
		</Style>
		<Style Selector="^ Grid#PART_BreakPresenter">
			<Setter Property="IsVisible" Value="True"/>
		</Style>
		<Style Selector="^ Viewbox#PART_Viewbox">
			<Setter Property="Height" Value="130"/>
		</Style>
		<Style Selector="^ Border#PART_Border">
			<Setter Property="Grid.RowSpan" Value="1"/>
		</Style>
		<Style Selector="^ ListBoxItem:nth-last-child(1)">
			<Style Selector="^ Grid#PART_Host">
				<Setter Property="Height" Value="55"/>
			</Style>
			<Style Selector="^ Grid#PART_BreakPresenter">
				<Setter Property="IsVisible" Value="False"/>
			</Style>
			<Style Selector="^ Viewbox#PART_Viewbox">
				<Setter Property="Height" Value="55"/>
			</Style>
			<Style Selector="^ Border#PART_Border">
				<Setter Property="Grid.RowSpan" Value="3"/>
			</Style>
		</Style>
	</Style>
</Styles>
